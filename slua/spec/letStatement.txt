#
# Dependencies: Lua, type, exportPrefix
#

New Syntax {
	
	PreLet ::=
	
	stat @::= | OptExportPrefix PreLet "let" uncondDestrPat ["=" explist]
}

New Keywords {
	let
}

Let Statement {
	
	Creates new global or local variable(s) with names, that cant be modified (not even its contents), unless mut is added.
	
	Types are assigned automatically, when needed.

	Global variables are automatically marked with comptime, unless marked with @EntrypointInit, using comptime on globals is an soft-error.
	
	
	Implementation {
		May be a local ?<const>? variable
		Or a global variable
		
		Possibly, equivelant to "local x = 1234", or "x = 1234", except, it can be exported.
		And if x is a table / whatever, its contents cant be edited, unless mut is added.
		
		The value might be frozen at runtime (metatable, or internal stuff)
		
		If something somehow modifies a const variable, the changes might be ignored.
	}
}