#
# Dependencies: Lua, type, exportPrefix, safety
#

New Syntax {

	PreFn ::=
	
	stat @::= | OptExportPrefix [safety] PreFn ["struct"] "fn" Name "(" [paramList] ")" ["->" typeExp] statOrRet
}

New Keywords {
	fn
	type
}

Fn Statement {
	
	Creates a new global or local function with a name 'Name', that cant be modified.
	
	
	If the "struct" tag is added, then this function returns a nominal/strong type, and it must always return a type or a error.
	
	
	Param types, and return type are assigned automatically, if missing.
	
	Params are immutable / constant by default.
	The default type for params is DynAny, as there is no information to infer anything.
	
	Partially equivalent to "local function x() end", except, it can be exported.
	
	Implementation {
		In lua, this can be a local function, or a global function, could also be a table with a special metatable.
		The function might be frozen at runtime (metatable, or internal stuff)
		If something somehow modifies the function variable, the changes might be ignored.
	}
}