#
# Dependencies: Lua
#

New Keywords {
	
	--language:lua content:/(?-i)X/
	--language:lua symbol:/(?-i)X/
	
	--kw		content		symbol		meaning
	
	
	--Maybe...

	continue 	(162k)		(4.1k)		Try looping again.
	where  		(299k)		(1.8k)		?
	reloc  		(6.1k)		(470)		Relocate a value
	loop   		(288k)		(12.8k)		Force loop again
	raw    		(766k)		(176k)		?
	ref    		(1.1m)		(82.4k)		?
	

	--Future proofing

	share		(424k)		(7.6k)		Extended ref system
	only		(745k)		(5.2k)		Different ref system
	box    		(451k)		(42.2k)		?
	abstract	(14k)		(358)		?
	become 		(52k)		(286)		?
	final  		(122k)		(7.7k)		?
	override	(253k)		(14.8k)		?
	typeof 		(44k)		(616)		?
	virtual		(82.9k)		(3.2k)		?
	unsized		(120)		(0)			?
	global		(578k)		(16.1k)		Easier to undestand than static?


	--TODO, planned
	
	copy   		(461k)		(41.7k)		Copy a value explicitly
	move   		(1.7m)		(341k)		Borrow a value explicitly
	super  		(207k)		(6.3k)		Super-type
	generator	(64.8k)		(5.6k)		Generator function?
	gen    		(909k)		(89.6k)		Generator?
	
	yield  		(53.8k)		(2.3k)		Async / gen weak return
	async  		(82.9k)		(5.7k)		Mark as async?
	await  		(16.9k)		(1.2k)		Wait for something from a value.
	static 		(250k)		(6.5k)		Global
	
	
	--keywords from other spec things
	
	it			(..)		(..)		also exp/block
	to			(4m)		(1.1m)		range operator / match range
	as			(4.6m)		(713k)		cast / use...as...
	of			(2.5m)		(87k)		match [...] of ...
	fn			(563k)		(48.1k)		function def
	ex			(3.7m)		(573k)		export
	dyn    		(209k)		(5.5k)		Vtable traits
	let			(1.6m)		(199k)		var def
	try			(672k)		(73k)		try expr/stat
	use			(2.4m)		(140k)		use expr
	mut			(85k)		(8.2k)		mutable
	mod			(..)		(..)		module
	also		(..)		(..)		also expressions / blocks
	case		(352k)		(8.2k)		match case
	drop   		(377k)		(40.3k)		Drop a value explicitly
	enum   		(129k)		(8.5k)		Define a enum
	impl   		(594k)		(23.8k)		Implement a trait
	type		(1.9m)		(78.3k)		type alias
	safe   		(141k)		(17.2k)		Mark as safe
	self		(1.5m)		(35.3k)		self arg / this module
	Self		(174k)		(11.4k)		This type
	const		(317k)		(34.3k)		Immutable pointers
	crate		(73k)		(1.1k)		this crate
	alloc		(??)		(??)		Allocate something for gc
	macro		(52.5k)		(5.8k)		macro def
	match		(545k)		(27.4k)		match expr
	catch		(44k)		(3.3k)		catch stat
	throw		(92.2k)		(7k)		return a error
	trait  		(63.2k)		(4k)		Define a trait
	union  		(25k)		(2k)		Define a union
	axiom		(..)		(..)		Axiom stuff
	unsafe 		(6.4k)		(372)		Mark as unsafe
	struct 		(506k)		(62.2k)		Define a struct
	module		(651k)		(40.2k)		module def
	extern		(..)		(..)		extern blocks, extern spec
	comptime	(256)		(4)			comptime marker / expr
	
	
}
Data {
	
	--Not reserved currently
	
	a			(6.1m)		(3.6m)		advanced types
	is			(4.8m)		(1m)		postfix types?
	new 		(1.8m)		(303k)		?
}